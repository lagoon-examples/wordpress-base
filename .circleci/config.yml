# CircleCI configuration file

version: 2.1

commands:
  install_and_check:
    description: "Install Wordpress and check it works"
    steps:
      # build docker compose project and setup network
      - run:
          name: Update codebase to follow CI configuration
          command: |
            sed -i -e "/###/d" docker-compose.yml
      - run: docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
      - run: docker-compose build && docker-compose up -d
      - run: docker info
      - run: 
          name: Check all services are up
          command: |
            sleep 10
            docker-compose ps -a
            docker network ls
            docker-compose logs
      # ensure DB is up prior to install
      - run:
          name: Check mariadb (or postgres) is responsive with dockerize
          command: |
            docker run --rm --net circleci_default jwilder/dockerize dockerize -wait tcp://mariadb:3306 -timeout 30s || \
            docker run --rm --net circleci_default jwilder/dockerize dockerize -wait tcp://postgres:5432 -timeout 30s
      # install WordPress profile
      - run: 
          name: Ensure all modules are installed and test install Wordpress
          command: |
            docker-compose exec cli composer install
            docker-compose exec cli wp core install --allow-root --url=wordpress-example-simple.docker.amazee.io --title="WordPress site-install" --admin_user=admin --admin_email=admin@example.com
      # check that the site is installed
      - run: 
          name: Fix theme-level redirects
          command: |
            docker-compose exec php sed -i "1 aremove_filter('template_redirect','redirect_canonical');" /app/web/content/themes/twentytwenty/functions.php
      - run: 
          name: Check page title matches site-name
          command: |
            docker-compose exec cli curl -kLv http://nginx:8080
      # perform some informational checks
  remove_all:
    description: "Remove all containers etc"
    steps:
      - run: 
          name: Stops and removes circleci containers, images, networks and volumes created by docker-compose up
          command: |
            sed -i -e "/###/d" docker-compose.yml
            docker-compose -p circleci down -v --remove-orphans
            docker image rm circleci_php circleci_nginx circleci || true
executors:
  php_docker:
    docker:
      - image: circleci/php:7.4-cli
        user: root
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSE_PROJECT_NAME: circleci

jobs:
  composer:
    executor: php_docker
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist --ignore-platform-reqs
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      # run tests
      - run: composer validate
  
  docker-compose:
    executor: php_docker
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - install_and_check
      - remove_all

  leia-tests:
    docker:
      - image: circleci/php:7.4-cli-node
        user: root
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - run:
          name: Install Leia and dependencies
          command: yarn add leia-parser mocha chai command-line-test
      - run:
          name: Generate test files
          command: yarn leia TESTING_dockercompose.md test -r 2 -s 'Start up tests' -t 'Verification commands' -c 'Destroy tests'
      - run:
          name: Run tests
          command: yarn mocha --timeout 900000 test/*.func.js

  leia-tests-latest:
    docker:
      - image: circleci/php:7.4-cli-node
        user: root
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - run:
          name: use testlagoon repo instead of uselagoon
          command: |
            grep -rl uselagoon ./lagoon/*.dockerfile | xargs sed -i '/^FROM/ s/uselagoon/testlagoon/'
            grep -rl uselagoon ./docker-compose.yml | xargs sed -i '/image:/ s/uselagoon/testlagoon/'
      - run:
          name: Install Leia and dependencies
          command: yarn add leia-parser mocha chai command-line-test
      - run:
          name: Generate test files
          command: yarn leia TESTING_dockercompose.md test -r 2 -s 'Start up tests' -t 'Verification commands' -c 'Destroy tests'
      - run:
          name: Run tests
          command: yarn mocha --timeout 900000 test/*.func.js
      - run:
          name: revert to testlagoon repo instead of uselagoon
          command: |
            grep -rl testlagoon ./lagoon/*.dockerfile | xargs sed -i '/^FROM/ s/testlagoon/uselagoon/'
            grep -rl testlagoon ./docker-compose.yml | xargs sed -i '/image:/ s/testlagoon/uselagoon/'
workflows:
  version: 2
  commit:
    jobs:
      - composer
      - docker-compose
      - leia-tests
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - 9.x-advanced
                - 8.x-advanced
    jobs:
      - composer
      - docker-compose
      - leia-tests
      - leia-tests-latest